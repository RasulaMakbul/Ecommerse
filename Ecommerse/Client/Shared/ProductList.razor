@inject IProductService ProductService
@if(ProductService.Products==null || ProductService.Products.Count == 0)
{
    <span> Loading Products....</span>
}
else
{
    <ul class="list-unstyled">
    @foreach (var product in ProductService.Products)
    {
        <li class="oi-media-pause my-3">
            <div class="media-img-wrapper mr-2">
                <a href="#">
                    <img class="media-img" src="@product.ImageUrl" alt="@product.title"/>
                </a>
            </div>
            <div class="media-body">
                <a href="#">
                    <h4 class="mb-0">@product.title</h4>

                </a>
                <p>@product.description</p>
                <h5 class="price">
                    $@product.Price
                </h5>
            </div>
        </li>
    }
</ul>
}



@code {

    protected override async Task OnInitializedAsync()
    {

        await ProductService.GetProducts();
        //var result=
        //    await Http.GetFromJsonAsync<ServiceResponse<List<Products>>>("api/Products");
        //if (result != null && result.Data !=null)
        //{
        //    products = result.Data;
        //}
        
    }

}
